plugins {
    id 'base'
}

/*
repositories {
    ['cloudark', 'localhost'].each { host ->
        maven {
            credentials {
                username findProperty('cloudarkUser')
                password findProperty('cloudarkApiKey')
            }
            url "http://$host:8081/artifactory/local/"
        }
    }
}

configurations {
    data
}

dependencies {
    data group: 'de.dfki.mary', name: 'blizzard2017-data-lab', version: '0.4.0', ext: 'zip'
    data group: 'de.dfki.mary.blizzard', name: 'blizzard2017-data-f0', version: '0.1-SNAPSHOT', ext: 'zip'
    data group: 'de.dfki.mary.blizzard', name: 'blizzard2017-f0-dnn-model', version: '0.1-SNAPSHOT', ext: 'zip'
}

task unpackData(type: Copy) {
    from configurations.data
    into "$buildDir/input"
    filesMatching '*.zip', { zipFileDetails ->
        copy {
            from zipTree(zipFileDetails.file)
            into destinationDir
            eachFile {
                it.path = it.name
            }
            includeEmptyDirs = false
        }
        zipFileDetails.exclude()
    }
}
*/
/*
add task to unpack data. The data should be unpacked in the build folder as follows:
    
    -textgrid: source textgrids
    -f0: source f0 with the following format: time, f0
    -model:
        -frozen_model
        -input_std
        -output_std
        -phone_dict


*/
task synthesize(type: PyExec) {
    //dependsOn unpackData
    srcFiles = [file("$buildDir/textgrid"), file("$buildDir/f0"), file("$buildDir/model")]
    destDirs = file("$buildDir/wav")
    pyFile = file("scripts/synthesize_v2.py")
    args += srcFiles + [destDirs]
}